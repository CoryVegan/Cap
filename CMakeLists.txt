CMAKE_MINIMUM_REQUIRED(VERSION 2.8.8)

PROJECT(cap)

IF(NOT DEFINED CAP_DATA_DIR)
    MESSAGE(FATAL_ERROR "\n"
        "You must pass a flag -DCAP_DATA_DIR=/path/to/dir/with/meshes\n"
        "to cmake.\n"
        )
ENDIF()

IF(DEFINED DEAL_II_INSTALL_DIR)
    FIND_PACKAGE(deal.II 8.3 REQUIRED PATHS ${DEAL_II_INSTALL_DIR} NO_DEFAULT_PATH)
    INCLUDE(${DEAL_II_TARGET_CONFIG})
    INCLUDE_DIRECTORIES(SYSTEM ${DEAL_II_INCLUDE_DIRS})
    SET(ENABLE_DEAL_II ON)
    ADD_DEFINITIONS(-DWITH_DEAL_II)
ENDIF()

SET(CMAKE_FIND_LIBRARY_SUFFIXES ".a;.so")
IF(DEFINED TASMANIAN_INSTALL_DIR)
    MESSAGE("TASMANIAN_INSTALL_DIR = ${TASMANIAN_INSTALL_DIR}")
    FIND_LIBRARY(TASMANIAN_LIBRARIES
        NAMES tasmaniansparsegrid
        PATHS ${TASMANIAN_INSTALL_DIR}/lib
        NO_DEFAULT_PATH
        )
    FIND_PATH(TASMANIAN_INCLUDE_DIR tasmanian/TasmanianSparseGrid.hpp
        PATHS ${TASMANIAN_INSTALL_DIR}/include
        NO_DEFAULT_PATH
        )
    MESSAGE("TASMANIAN_LIBRARIES=${TASMANIAN_LIBRARIES}")
    MESSAGE("TASMANIAN_INCLUDE_DIR=${TASMANIAN_INCLUDE_DIR}")
    INCLUDE_DIRECTORIES(SYSTEM ${TASMANIAN_INCLUDE_DIR})
    LINK_DIRECTORIES(${TASMANIAN_LIBRARY_DIR})
    SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS}")
    ADD_DEFINITIONS(-DWITH_TASMANIAN)
    SET(ENABLE_TASMANIAN ON)
ENDIF()

IF(DEFINED GSL_INSTALL_DIR)
    MESSAGE("GSL_INSTALL_DIR = ${GSL_INSTALL_DIR}")
    FIND_LIBRARY(GSL_LIBRARIES
        NAMES gsl
        PATHS ${GSL_INSTALL_DIR}/lib
        NO_DEFAULT_PATH
        )
    FIND_PATH(GSL_INCLUDE_DIR gsl/gsl_version.h
        PATHS ${GSL_INSTALL_DIR}/include
        NO_DEFAULT_PATH
        )
    MESSAGE("GSL_LIBRARIES=${GSL_LIBRARIES}")
    MESSAGE("GSL_INCLUDE_DIR=${GSL_INCLUDE_DIR}")
    INCLUDE_DIRECTORIES(SYSTEM ${GSL_INCLUDE_DIR})
    SET(ENABLE_GSL ON)
ENDIF()

IF(DEFINED BOOST_INSTALL_DIR)
    MESSAGE("BOOST_INSTALL_DIR = ${BOOST_INSTALL_DIR}")
    SET(BOOST_ROOT ${BOOST_INSTALL_DIR})
    SET(Boost_NO_SYSTEM_PATHS ON)
    FIND_PACKAGE(Boost 1.59.0 REQUIRED
        COMPONENTS 
        python 
        unit_test_framework
        )
    MESSAGE("Boost_LIBRARIES=${Boost_LIBRARIES}")
    MESSAGE("Boost_INCLUDE_DIRS=${Boost_INCLUDE_DIRS}")
    INCLUDE_DIRECTORIES(SYSTEM ${Boost_INCLUDE_DIRS})
ENDIF()

#INCLUDE(ExternalProject)
#INCLUDE(${PROJECT_SOURCE_DIR}/cmake/cap-data.cmake)

SET(ENABLE_PYTHON ON)

INCLUDE_DIRECTORIES(include)

ADD_SUBDIRECTORY(src)

SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY lib)
SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY lib)
ADD_LIBRARY(cap
    ${CAP_SOURCES}
    )


ENABLE_TESTING()
ADD_SUBDIRECTORY(test)
IF(ENABLE_PYTHON)
    ADD_SUBDIRECTORY(python)
ENDIF()
IF(MAKE_DOC)
    ADD_SUBDIRECTORY(doc)
ENDIF()

INSTALL(TARGETS cap DESTINATION ${CMAKE_INSTALL_PREFIX}/lib)
INSTALL(DIRECTORY src/ 
    DESTINATION ${CMAKE_INSTALL_PREFIX}/include/cap
    FILES_MATCHING 
    PATTERN "*.h"
    PATTERN "*.templates.h" EXCLUDE
)

SET(CMAKE_EXPORT_COMPILE_COMMANDS 1)

